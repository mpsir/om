!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).VueMonaco=e()}(this,function(){"use strict";var t=function(t){for(var e=arguments,i=1;i<arguments.length;i++)for(var o in arguments[i])t[o]=e[i][o];return t},e={name:"MonacoEditor",props:{original:String,value:{type:String,required:!0},theme:{type:String,default:"vs"},language:String,options:Object,amdRequire:{type:Function,default:globalThis.require},diffEditor:{type:Boolean,default:!1}},model:{event:"change"},watch:{options:{deep:!0,handler:function(t){this.editor&&this.getModifiedEditor().updateOptions(t)}},value:function(t){if(this.editor){var e=this.getModifiedEditor();t!==e.getValue()&&e.setValue(t)}},original:function(t){if(this.editor&&this.diffEditor){var e=this.getOriginalEditor();t!==e.getValue()&&e.setValue(t)}},language:function(t){if(this.editor){var e=this.getModifiedEditor();this.monaco.editor.setModelLanguage(e.getModel(),t)}},theme:function(t){this.editor&&this.monaco.editor.setTheme(t)}},mounted:function(){var t=this;if(this.amdRequire)this.amdRequire(["vs/editor/editor.main"],function(){t.monaco=window.monaco,t.$nextTick(function(){t.initMonaco(window.monaco)})});else{var e=require("monaco-editor");this.monaco=e,this.$nextTick(function(){t.initMonaco(e)})}},beforeDestroy:function(){this.editor&&this.editor.dispose()},methods:{initMonaco:function(e){var i=this;this.$emit("editorWillMount",this.monaco);var o=t({value:this.value,theme:this.theme,language:this.language,lineNumbersMinChars:1,roundedSelection:!1,scrollBeyondLastLine:!1,readOnly:!1,minimap:{enabled:!1},automaticLayout:!0,overviewRulerLanes:0,hideCursorInOverviewRuler:!0,scrollbar:{vertical:"hidden"},overviewRulerBorder:!1},this.options);if(this.diffEditor){this.editor=e.editor.createDiffEditor(this.$el,o);var n=e.editor.createModel(this.original,this.language),r=e.editor.createModel(this.value,this.language);this.editor.setModel({original:n,modified:r})}else{this.editor=e.editor.create(this.$el,o);var d=this.editor._domElement,a=d.getElementsByClassName("view-lines")[0],s=0,u=this.editor.getValue();this.objData=u,this.$emit("input",u),setTimeout(function(){var t=a.childElementCount>s?a.offsetHeight:20*a.childElementCount+10;s=a.childElementCount,d.style.height=t+"px",h.layout()},0),this.editor.onDidChangeModelDecorations(function(){var t=i.editor.getValue();i.objData=t,i.$emit("input",t),setTimeout(function(){var t=a.childElementCount>s?a.offsetHeight:20*a.childElementCount+10;s=a.childElementCount,d.style.height=t+"px",h.layout()},0)})}var h=this.getModifiedEditor();h.onDidChangeModelContent(function(t){var e=h.getValue();i.value!==e&&i.$emit("change",e,t)}),this.$emit("editorDidMount",this.editor)},getMonaco:function(){return this.editor},getEditor:function(){return this.editor},getModifiedEditor:function(){return this.diffEditor?this.editor.getModifiedEditor():this.editor},getOriginalEditor:function(){return this.diffEditor?this.editor.getOriginalEditor():this.editor},focus:function(){this.editor.focus()}},render:function(t){return t("div")}};return"undefined"!=typeof window&&window.Vue&&window.Vue.component(e.name,e),e});